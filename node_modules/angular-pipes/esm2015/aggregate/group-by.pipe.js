/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { getProperty, isArray, isUndefined } from '../utils/utils';
export class GroupByPipe {
    /**
     * @param {?} input
     * @param {?} prop
     * @return {?}
     */
    transform(input, prop) {
        if (!isArray(input)) {
            return input;
        }
        /** @type {?} */
        const arr = {};
        for (const value of input) {
            /** @type {?} */
            const field = getProperty(value, prop);
            if (isUndefined(arr[field])) {
                arr[field] = [];
            }
            arr[field].push(value);
        }
        return Object.keys(arr).map(key => ({ key, 'value': arr[key] }));
    }
}
GroupByPipe.decorators = [
    { type: Pipe, args: [{
                name: 'groupBy'
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtYnkucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItcGlwZXMvIiwic291cmNlcyI6WyJhZ2dyZWdhdGUvZ3JvdXAtYnkucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFLbkUsTUFBTSxPQUFPLFdBQVc7Ozs7OztJQUV0QixTQUFTLENBQUMsS0FBVSxFQUFFLElBQVk7UUFFaEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUNuQixPQUFPLEtBQUssQ0FBQztTQUNkOztjQUVLLEdBQUcsR0FBa0MsRUFBRTtRQUU3QyxLQUFLLE1BQU0sS0FBSyxJQUFJLEtBQUssRUFBRTs7a0JBQ25CLEtBQUssR0FBUSxXQUFXLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQztZQUUzQyxJQUFJLFdBQVcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtnQkFDM0IsR0FBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLEVBQUUsQ0FBQzthQUNqQjtZQUVELEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDeEI7UUFFRCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7OztZQXhCRixJQUFJLFNBQUM7Z0JBQ0osSUFBSSxFQUFFLFNBQVM7YUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IGdldFByb3BlcnR5LCBpc0FycmF5LCBpc1VuZGVmaW5lZCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcclxuXHJcbkBQaXBlKHtcclxuICBuYW1lOiAnZ3JvdXBCeSdcclxufSlcclxuZXhwb3J0IGNsYXNzIEdyb3VwQnlQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcblxyXG4gIHRyYW5zZm9ybShpbnB1dDogYW55LCBwcm9wOiBzdHJpbmcpOiBBcnJheTxhbnk+IHtcclxuXHJcbiAgICBpZiAoIWlzQXJyYXkoaW5wdXQpKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBhcnI6IHsgW2tleTogc3RyaW5nXTogQXJyYXk8YW55PiB9ID0ge307XHJcblxyXG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiBpbnB1dCkge1xyXG4gICAgICBjb25zdCBmaWVsZDogYW55ID0gZ2V0UHJvcGVydHkodmFsdWUsIHByb3ApO1xyXG5cclxuICAgICAgaWYgKGlzVW5kZWZpbmVkKGFycltmaWVsZF0pKSB7XHJcbiAgICAgICAgYXJyW2ZpZWxkXSA9IFtdO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBhcnJbZmllbGRdLnB1c2godmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBPYmplY3Qua2V5cyhhcnIpLm1hcChrZXkgPT4gKHsga2V5LCAndmFsdWUnOiBhcnJba2V5XSB9KSk7XHJcbiAgfVxyXG59XHJcbiJdfQ==