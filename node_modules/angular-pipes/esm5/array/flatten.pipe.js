/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { isArray, isDeepObject, unwrapDeep, flatten } from '../utils/utils';
var FlattenPipe = /** @class */ (function () {
    function FlattenPipe() {
    }
    /**
     * @param {?} input
     * @return {?}
     */
    FlattenPipe.prototype.transform = /**
     * @param {?} input
     * @return {?}
     */
    function (input) {
        /** @type {?} */
        var isDeep = isDeepObject(input);
        if (!isArray(input) && !isDeep) {
            return input;
        }
        if (isDeep) {
            /** @type {?} */
            var unwrapped = unwrapDeep(input);
            if (!isArray(unwrapped)) {
                return unwrapped;
            }
            return flatten(unwrapped, 0);
        }
        return [].concat.apply([], input);
    };
    FlattenPipe.decorators = [
        { type: Pipe, args: [{ name: 'flatten' },] }
    ];
    return FlattenPipe;
}());
export { FlattenPipe };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhdHRlbi5waXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1waXBlcy8iLCJzb3VyY2VzIjpbImFycmF5L2ZsYXR0ZW4ucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBa0IsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTVFO0lBQUE7SUFxQkEsQ0FBQzs7Ozs7SUFsQkMsK0JBQVM7Ozs7SUFBVCxVQUFXLEtBQVU7O1lBRWIsTUFBTSxHQUFHLFlBQVksQ0FBQyxLQUFLLENBQUM7UUFDbEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUM5QixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsSUFBSSxNQUFNLEVBQUU7O2dCQUNKLFNBQVMsR0FBRyxVQUFVLENBQUMsS0FBSyxDQUFDO1lBQ25DLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEVBQUU7Z0JBQ3ZCLE9BQU8sU0FBUyxDQUFDO2FBQ2xCO1lBRUQsT0FBTyxPQUFPLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO1NBQzlCO1FBRUQsT0FBTyxFQUFFLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDcEMsQ0FBQzs7Z0JBcEJGLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUU7O0lBcUJ6QixrQkFBQztDQUFBLEFBckJELElBcUJDO1NBcEJZLFdBQVciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBpc0FycmF5LCBpc0RlZXBPYmplY3QsIHVud3JhcERlZXAsIGZsYXR0ZW4gfSBmcm9tICcuLi91dGlscy91dGlscyc7XHJcblxyXG5AUGlwZSh7IG5hbWU6ICdmbGF0dGVuJyB9KVxyXG5leHBvcnQgY2xhc3MgRmxhdHRlblBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICBcclxuICB0cmFuc2Zvcm0gKGlucHV0OiBhbnkpOiBhbnkge1xyXG4gICAgXHJcbiAgICBjb25zdCBpc0RlZXAgPSBpc0RlZXBPYmplY3QoaW5wdXQpO1xyXG4gICAgaWYgKCFpc0FycmF5KGlucHV0KSAmJiAhaXNEZWVwKSB7XHJcbiAgICAgIHJldHVybiBpbnB1dDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKGlzRGVlcCkge1xyXG4gICAgICBjb25zdCB1bndyYXBwZWQgPSB1bndyYXBEZWVwKGlucHV0KTtcclxuICAgICAgaWYgKCFpc0FycmF5KHVud3JhcHBlZCkpIHtcclxuICAgICAgICByZXR1cm4gdW53cmFwcGVkO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICByZXR1cm4gZmxhdHRlbih1bndyYXBwZWQsIDApO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4gW10uY29uY2F0LmFwcGx5KFtdLCBpbnB1dCk7XHJcbiAgfVxyXG59Il19